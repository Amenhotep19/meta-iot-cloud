From fa2bcde69d0771c83b4b031c784be5cffdc588e7 Mon Sep 17 00:00:00 2001
From: Scott Ware <scott.r.ware@intel.com>
Date: Thu, 5 Jan 2017 15:53:03 +0000
Subject: [PATCH 1/3] Use provided dependencies if available

---
 device/iothub_client_python/CMakeLists.txt     |  2 +
 device/iothub_client_python/dependencies.cmake | 85 ++++++++++++++++++++++++++
 device/iothub_client_python/src/CMakeLists.txt | 20 +++---
 3 files changed, 100 insertions(+), 7 deletions(-)
 create mode 100644 device/iothub_client_python/dependencies.cmake

diff --git a/device/iothub_client_python/CMakeLists.txt b/device/iothub_client_python/CMakeLists.txt
index d34747b..250744f 100644
--- a/device/iothub_client_python/CMakeLists.txt
+++ b/device/iothub_client_python/CMakeLists.txt
@@ -62,6 +62,8 @@ find_package(PythonLibs ${build_python} REQUIRED)
 include_directories(${PYTHON_INCLUDE_DIRS})
 link_directories(${PYTHON_LIBRARIES})
 
+include("dependencies.cmake")
+
 # get iothub_client and protocols
 include_directories(${SHARED_UTIL_INC_FOLDER})
 include_directories(${IOTHUB_CLIENT_INC_FOLDER})
diff --git a/device/iothub_client_python/dependencies.cmake b/device/iothub_client_python/dependencies.cmake
new file mode 100644
index 0000000..b8e67a8
--- /dev/null
+++ b/device/iothub_client_python/dependencies.cmake
@@ -0,0 +1,85 @@
+#Copyright (c) Microsoft. All rights reserved.
+#Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+find_library (SHARED_UTIL_LIB_PATH NAMES aziotsharedutil)
+find_library (UAMQP_LIB_PATH NAMES uamqp)
+find_library (UMQTT_LIB_PATH NAMES umqtt)
+find_library (IOTHUB_CLIENT_LIB_PATH NAMES iothub_client)
+find_library (IOTHUB_CLIENT_MQTT_TRANSPORT_LIB_PATH NAMES iothub_client_mqtt_transport)
+find_library (IOTHUB_CLIENT_HTTP_TRANSPORT_LIB_PATH NAMES iothub_client_http_transport)
+find_library (IOTHUB_CLIENT_AMQP_TRANSPORT_LIB_PATH NAMES iothub_client_amqp_transport)
+ 
+# Check if shared utils library is already provided
+if (SHARED_UTIL_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(SHARED_UTIL_FOUND 1)
+    set(SHARED_UTIL_INC_FOLDER ${AZURE_INCLUDE_DIR})
+endif()
+
+if (NOT SHARED_UTIL_FOUND)
+    add_subdirectory(c-utility)
+    set(SHARED_UTIL_LIB_PATH aziotsharedutil)
+endif()
+
+# Check if uAMQP library is already provided
+if (UAMQP_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(UAMQP_FOUND 1)
+    set(UAMQP_INC_FOLDER ${AZURE_INCLUDE_DIR})
+endif()
+
+if (use_amqp AND NOT UAMQP_FOUND)
+    add_subdirectory(uamqp)
+    set(UAMQP_LIB_PATH uamqp)
+endif()
+
+# Check if uMQTT library is already provided
+if (UMQTT_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(UMQTT_FOUND 1)
+    set(MQTT_INC_FOLDER ${AZURE_INCLUDE_DIR})
+endif()
+
+if (use_mqtt AND NOT UMQTT_FOUND)
+    add_subdirectory(umqtt)
+    set(UMQTT_LIB_PATH umqtt)
+endif()
+
+# Check if iothub client library is already provided
+if (IOTHUB_CLIENT_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(IOTHUB_CLIENT_FOUND 1)
+    set(IOTHUB_CLIENT_INC_FOLDER ${AZURE_INCLUDE_DIR})
+endif()
+
+if (NOT IOTHUB_CLIENT_FOUND)
+    set(IOTHUB_CLIENT_LIB_PATH iothub_client)
+endif()
+
+# Check if iothub client mqtt transport library is already provided
+if (IOTHUB_CLIENT_MQTT_TRANSPORT_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(IOTHUB_CLIENT_MQTT_TRANSPORT_FOUND 1)
+    set(IOTHUB_CLIENT_MQTT_TRANSPORT_INC_FOLDER ${AZURE_INCLUDE_DIR})
+endif()
+
+if (NOT IOTHUB_CLIENT_MQTT_TRANSPORT_FOUND)
+    set(IOTHUB_CLIENT_MQTT_TRANSPORT_LIB_PATH iothub_client_mqtt_transport)
+endif()
+
+# Check if iothub client http transport library is already provided
+if (IOTHUB_CLIENT_HTTP_TRANSPORT_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(IOTHUB_CLIENT_HTTP_TRANSPORT_FOUND 1)
+    set(IOTHUB_CLIENT_HTTP_TRANSPORT_INC_FOLDER ${AZURE_INCLUDE_DIR})
+endif()
+
+if (NOT IOTHUB_CLIENT_HTTP_TRANSPORT_FOUND)
+    set(IOTHUB_CLIENT_HTTP_TRANSPORT_LIB_PATH iothub_client_http_transport)
+endif()
+
+# Check if iothub client amqp transport library is already provided
+if (IOTHUB_CLIENT_AMQP_TRANSPORT_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(IOTHUB_CLIENT_AMQP_TRANSPORT_FOUND 1)
+    set(IOTHUB_CLIENT_AMQP_TRANSPORT_INC_FOLDER ${AZURE_INCLUDE_DIR})
+endif()
+
+if (NOT IOTHUB_CLIENT_AMQP_TRANSPORT_FOUND)
+    set(IOTHUB_CLIENT_AMQP_TRANSPORT_LIB_PATH iothub_client_amqp_transport)
+endif()
+
+include_directories(${SHARED_UTIL_INC_FOLDER}/azure_c_shared_utility)
diff --git a/device/iothub_client_python/src/CMakeLists.txt b/device/iothub_client_python/src/CMakeLists.txt
index 3daa3bd..ee5cd97 100644
--- a/device/iothub_client_python/src/CMakeLists.txt
+++ b/device/iothub_client_python/src/CMakeLists.txt
@@ -27,14 +27,20 @@ ENDIF(WIN32)
 
 target_link_libraries(  
     iothub_client_python
-    iothub_client_mqtt_transport
-    iothub_client_http_transport
-    iothub_client_amqp_transport
-    iothub_client 
-    uamqp
+    ${IOTHUB_CLIENT_MQTT_TRANSPORT_LIB_PATH} 
+    ${IOTHUB_CLIENT_HTTP_TRANSPORT_LIB_PATH} 
+    ${IOTHUB_CLIENT_AMQP_TRANSPORT_LIB_PATH} 
+    ${IOTHUB_CLIENT_LIB_PATH} 
+    ${UAMQP_LIB_PATH}
     ${Boost_LIBRARIES}
     ${PYTHON_LIBRARIES}
 )
 
-linkSharedUtil(iothub_client_python)
-linkUAMQP(iothub_client_python)
+target_link_libraries(iothub_client_python ${SHARED_UTIL_LIB_PATH})
+
+include_directories(${UAMQP_INC_FOLDER})
+target_link_libraries(iothub_client_python ${UAMQP_LIB_PATH} ${SHARED_UTIL_LIB_PATH} ssl crypto)
+    
+if(${use_wsio})
+    target_link_libraries(iothub_client_python websockets)
+endif()
-- 
1.9.1

