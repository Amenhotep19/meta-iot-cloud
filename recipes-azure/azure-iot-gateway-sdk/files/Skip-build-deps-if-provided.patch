From 6f9b2774d0090862c9a6533f6a91b9717a9e1d98 Mon Sep 17 00:00:00 2001
From: Scott Ware <scott.r.ware@intel.com>
Date: Wed, 16 Nov 2016 20:50:31 +0000
Subject: [PATCH 2/3] Skip build deps if provided

---
 CMakeLists.txt                                     | 80 ++++++++++++++++++++--
 bindings/java/CMakeLists.txt                       |  6 +-
 core/CMakeLists.txt                                | 10 +--
 modules/azure_functions/CMakeLists.txt             |  4 +-
 modules/ble/CMakeLists.txt                         |  8 ++-
 modules/identitymap/CMakeLists.txt                 |  4 +-
 modules/iothub/CMakeLists.txt                      | 22 +++---
 modules/logger/CMakeLists.txt                      |  4 +-
 samples/azure_functions_sample/CMakeLists.txt      |  4 +-
 samples/hello_world/CMakeLists.txt                 |  4 +-
 samples/java_sample/CMakeLists.txt                 |  4 +-
 .../simulated_device_cloud_upload/CMakeLists.txt   |  4 +-
 12 files changed, 120 insertions(+), 34 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d659dc1..fd8ee9e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -130,14 +130,86 @@ endmacro(compileAsC11)
 enable_testing()
 compileAsC99()
 
-#this add the deps folder that will add C shared utility and IotHubClient
-add_subdirectory(./deps)
+find_library (SHARED_UTIL_LIB_PATH NAMES aziotsharedutil)
+find_library (IOTHUB_CLIENT_LIB_PATH NAMES iothub_client)
+find_library (IOTHUB_SERVICE_CLIENT_LIB_PATH NAMES iothub_service_client)
+find_library (IOTHUB_CLIENT_HTTP_LIB_PATH NAMES iothub_client_http_transport)
+find_library (IOTHUB_CLIENT_MQTT_LIB_PATH NAMES iothub_client_mqtt_transport)
+find_library (IOTHUB_CLIENT_AMQP_LIB_PATH NAMES iothub_client_amqp_transport)
+find_library (UAMQP_LIB_PATH NAMES uamqp)
+find_library (UMQTT_LIB_PATH NAMES umqtt)
+
+# Check if shared utils library is already provided
+if (SHARED_UTIL_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(SHARED_UTIL_FOUND 1)
+    set(SHARED_UTIL_INCLUDE_DIR ${AZURE_INCLUDE_DIR})
+
+    # Disable unit tests
+    set(skip_unittests ON)
+endif()
+
+if (NOT SHARED_UTIL_FOUND)
+    add_subdirectory(./deps/c-utility)
+    set(SHARED_UTIL_LIB_PATH aziotsharedutil)
+    set(SHARED_UTIL_INCLUDE_DIR ${SHARED_UTIL_INC_FOLDER})
+endif()
+
+# Check if IoTHub Client libs are provided
+if (IOTHUB_CLIENT_LIB_PATH AND IOTHUB_SERVICE_CLIENT_LIB_PATH AND AZURE_INCLUDE_DIR)
+    set(IOTHUB_CLIENT_FOUND 1)
+    set(IOTHUB_CLIENT_INCLUDE_DIR ${AZURE_INCLUDE_DIR})
+
+    # Check which transports are available
+    if (IOTHUB_CLIENT_HTTP_LIB_PATH)
+	set(use_http ON)
+    endif()
+
+    if (IOTHUB_CLIENT_MQTT_LIB_PATH)
+	set(use_mqtt ON)
+    endif()
+
+    if (IOTHUB_CLIENT_AMQP_LIB_PATH)
+	set(use_amqp ON)
+    endif()
+endif()
+
+if (NOT IOTHUB_CLIENT_FOUND)
+    add_subdirectory(./deps/iot-sdk/c)
+    set(IOTHUB_CLIENT_LIB_PATH iothub_client)
+    set(IOTHUB_SERVICE_CLIENT_LIB_PATH iothub_service_client)
+    set(IOTHUB_CLIENT_HTTP_LIB_PATH iothub_client_http_transport)
+    set(IOTHUB_CLIENT_MQTT_LIB_PATH iothub_client_mqtt_transport)
+    set(IOTHUB_CLIENT_AMQP_LIB_PATH iothub_client_amqp_transport)
+    set(IOTHUB_CLIENT_INCLUDE_DIR ${IOTHUB_CLIENT_INC_FOLDER})
+endif()
+
+# Check if uAMQP library is already provided
+if (UAMQP_LIB_PATH AND AZURE_INCLUDE_DIR AND IOTHUB_CLIENT_FOUND)
+    set(UAMQP_FOUND 1)
+    set(UAMQP_INCLUDE_DIR ${AZURE_INCLUDE_DIR})
+endif()
+
+if (NOT UAMQP_FOUND)
+    set(UAMQP_LIB_PATH uamqp)
+    set(UAMQP_INCLUDE_DIR ${UAMQP_INC_FOLDER})
+endif()
+
+# Check if uMQTT library is already provided
+if (UMQTT_LIB_PATH AND AZURE_INCLUDE_DIR AND IOTHUB_CLIENT_FOUND)
+    set(UMQTT_FOUND 1)
+    set(UMQTT_INCLUDE_DIR ${AZURE_INCLUDE_DIR})
+endif()
+
+if (NOT UMQTT_FOUND)
+    set(UMQTT_LIB_PATH umqtt)
+    set(UMQTT_INCLUDE_DIR ${MQTT_INC_FOLDER})
+endif()
 
 #this makes available from now on the includes of azure-c-shared-utility
-include_directories(${SHARED_UTIL_INC_FOLDER})
+include_directories(${SHARED_UTIL_INCLUDE_DIR})
 
 function(linkSharedUtil whatIsBuilding)
-  target_link_libraries(${whatIsBuilding} aziotsharedutil)
+  target_link_libraries(${whatIsBuilding} ${SHARED_UTIL_LIB_PATH})
 endfunction(linkSharedUtil)
 
 #this adds parson
diff --git a/bindings/java/CMakeLists.txt b/bindings/java/CMakeLists.txt
index beac578..f257a33 100644
--- a/bindings/java/CMakeLists.txt
+++ b/bindings/java/CMakeLists.txt
@@ -69,7 +69,7 @@ endif()
 
 set(LIBS ${java_libs} gateway)
 
-include_directories(./inc ${IOTHUB_CLIENT_INC_FOLDER})
+include_directories(./inc ${IOTHUB_CLIENT_INCLUDE_DIR})
 include_directories(${GW_INC})
 include_directories(${java_include_dirs})
 link_directories(${java_link_dirs})
@@ -88,7 +88,9 @@ linkSharedUtil(java_module_host_static)
 
 add_binding_to_solution(java_module_host)
 
-add_subdirectory(tests)
+if(NOT skip_unittests)
+    add_subdirectory(tests)
+endif()
 
 if(install_modules)
     install(TARGETS java_module_host LIBRARY DESTINATION "${LIB_INSTALL_DIR}/modules")
diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt
index e140b02..379959b 100644
--- a/core/CMakeLists.txt
+++ b/core/CMakeLists.txt
@@ -98,10 +98,10 @@ if(WIN32)
     target_link_libraries(gateway_install optimized "${CMAKE_CURRENT_BINARY_DIR}/../deps/c-utility/Release/aziotsharedutil.lib" optimized "${CMAKE_CURRENT_BINARY_DIR}/../deps/nanomsg/Release/nanomsg.lib")
     target_link_libraries(gateway_install parson ${dynamic_loader_library})
     
-    target_link_libraries(gateway aziotsharedutil nanomsg parson ${dynamic_loader_library})
+    target_link_libraries(gateway ${SHARED_UTIL_LIB_PATH} nanomsg parson ${dynamic_loader_library})
 else()
     target_link_libraries(gateway_install "${CMAKE_CURRENT_BINARY_DIR}/../deps/c-utility/libaziotsharedutil.a" "${CMAKE_CURRENT_BINARY_DIR}/../deps/nanomsg/libnanomsg.a" parson ${dynamic_loader_library})
-    target_link_libraries(gateway aziotsharedutil nanomsg parson ${dynamic_loader_library})
+    target_link_libraries(gateway ${SHARED_UTIL_LIB_PATH} nanomsg parson ${dynamic_loader_library})
     
     nn_check_lib (anl getaddrinfo_a NN_HAVE_GETADDRINFO_A)
     nn_check_lib (rt clock_gettime  NN_HAVE_CLOCK_GETTIME)
@@ -130,7 +130,9 @@ endif()
 
 set_target_properties(gateway PROPERTIES FOLDER "Gateway")
 
-add_subdirectory(tests)
+if(NOT skip_unittests)
+	add_subdirectory(tests)
+endif()
 
 #############################################################
 ########################INSTALL STUFF########################
@@ -194,4 +196,4 @@ install(
         "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}ConfigVersion.cmake"
     DESTINATION
         ${package_location}
-)
\ No newline at end of file
+)
diff --git a/modules/azure_functions/CMakeLists.txt b/modules/azure_functions/CMakeLists.txt
index 489c917..d53e055 100644
--- a/modules/azure_functions/CMakeLists.txt
+++ b/modules/azure_functions/CMakeLists.txt
@@ -32,4 +32,6 @@ if(install_executables)
     install(TARGETS azure_functions LIBRARY DESTINATION lib) 
 endif()
 
-add_subdirectory(tests)
\ No newline at end of file
+if(NOT skip_unittests)
+	add_subdirectory(tests)
+endif()
diff --git a/modules/ble/CMakeLists.txt b/modules/ble/CMakeLists.txt
index c5daf3f..2af94ef 100644
--- a/modules/ble/CMakeLists.txt
+++ b/modules/ble/CMakeLists.txt
@@ -95,7 +95,7 @@ linkSharedUtil(ble)
 # build ble as a static library
 add_library(ble_static STATIC ${ble_sources} ${ble_headers})
 target_compile_definitions(ble_static PRIVATE BUILD_MODULE_TYPE_STATIC)
-target_link_libraries(ble_static ${LIBS} iothub_service_client)
+target_link_libraries(ble_static ${LIBS} ${IOTHUB_SERVICE_CLIENT_LIB_PATH})
 linkSharedUtil(ble_static)
 
 # build ble C2D as a dynamic library
@@ -106,13 +106,15 @@ linkSharedUtil(ble_c2d)
 # build ble C2D as a static library
 add_library(ble_c2d_static STATIC ${ble_c2d_sources} ${ble_c2d_headers})
 target_compile_definitions(ble_c2d_static PRIVATE BUILD_MODULE_TYPE_STATIC)
-target_link_libraries(ble_c2d_static ${LIBS} iothub_service_client)
+target_link_libraries(ble_c2d_static ${LIBS} ${IOTHUB_SERVICE_CLIENT_LIB_PATH})
 linkSharedUtil(ble_c2d_static)
 
 add_module_to_solution(ble)
 add_module_to_solution(ble_c2d)
 
-add_subdirectory(tests)
+if(NOT skip_unittests)
+    add_subdirectory(tests)
+endif()
 
 if(install_modules)
     install(TARGETS ble LIBRARY DESTINATION "${LIB_INSTALL_DIR}/modules") 
diff --git a/modules/identitymap/CMakeLists.txt b/modules/identitymap/CMakeLists.txt
index 3c2f54f..88614e3 100644
--- a/modules/identitymap/CMakeLists.txt
+++ b/modules/identitymap/CMakeLists.txt
@@ -32,4 +32,6 @@ if(install_modules)
     install(TARGETS identity_map LIBRARY DESTINATION "${LIB_INSTALL_DIR}/modules") 
 endif()
 
-add_subdirectory(tests)
+if(NOT skip_unittests)
+    add_subdirectory(tests)
+endif()
diff --git a/modules/iothub/CMakeLists.txt b/modules/iothub/CMakeLists.txt
index 2521fd0..f31087b 100644
--- a/modules/iothub/CMakeLists.txt
+++ b/modules/iothub/CMakeLists.txt
@@ -14,7 +14,7 @@ set(iothub_headers
 
 include_directories(./inc)
 include_directories(${GW_INC})
-include_directories(${IOTHUB_CLIENT_INC_FOLDER})
+include_directories(${IOTHUB_CLIENT_INCLUDE_DIR})
 
 #this builds the iothub dynamic library
 add_library(iothub MODULE
@@ -23,7 +23,7 @@ add_library(iothub MODULE
 )
 target_link_libraries(iothub
     gateway
-    iothub_client
+    ${IOTHUB_CLIENT_LIB_PATH}
 )
 
 #this builds the iothub static library
@@ -34,12 +34,12 @@ add_library(iothub_static STATIC
 target_compile_definitions(iothub_static PRIVATE BUILD_MODULE_TYPE_STATIC)
 target_link_libraries(iothub_static
     gateway
-    iothub_client
+    ${IOTHUB_CLIENT_LIB_PATH}
 )
 
 if(${use_amqp})
-    target_link_libraries(iothub_static iothub_client_amqp_transport)
-    target_link_libraries(iothub iothub_client_amqp_transport)
+    target_link_libraries(iothub_static ${IOTHUB_CLIENT_AMQP_LIB_PATH})
+    target_link_libraries(iothub ${IOTHUB_CLIENT_AMQP_LIB_PATH})
     linkUAMQP(iothub_static)
     linkUAMQP(iothub)
 else()
@@ -47,8 +47,8 @@ else()
 endif()
 
 if(${use_http})
-    target_link_libraries(iothub_static iothub_client_http_transport)
-    target_link_libraries(iothub iothub_client_http_transport)
+    target_link_libraries(iothub_static ${IOTHUB_CLIENT_HTTP_LIB_PATH})
+    target_link_libraries(iothub ${IOTHUB_CLIENT_HTTP_LIB_PATH})
     linkHttp(iothub_static)
     linkHttp(iothub)
 else()
@@ -56,8 +56,8 @@ else()
 endif()
 
 if(${use_mqtt})
-    target_link_libraries(iothub_static iothub_client_mqtt_transport)
-    target_link_libraries(iothub iothub_client_mqtt_transport)
+    target_link_libraries(iothub_static ${IOTHUB_CLIENT_MQTT_LIB_PATH})
+    target_link_libraries(iothub ${IOTHUB_CLIENT_MQTT_LIB_PATH})
     linkMqttLibrary(iothub_static)
     linkMqttLibrary(iothub)
 else()
@@ -69,7 +69,9 @@ linkSharedUtil(iothub_static)
 
 add_module_to_solution(iothub)
 
-add_subdirectory(tests)
+if(NOT skip_unittests)
+    add_subdirectory(tests)
+endif()
 
 if(install_modules)
     install(TARGETS iothub LIBRARY DESTINATION "${LIB_INSTALL_DIR}/modules") 
diff --git a/modules/logger/CMakeLists.txt b/modules/logger/CMakeLists.txt
index 2acfb0e..1b94758 100644
--- a/modules/logger/CMakeLists.txt
+++ b/modules/logger/CMakeLists.txt
@@ -36,7 +36,9 @@ linkSharedUtil(logger_static)
 
 add_module_to_solution(logger)
 
-add_subdirectory(tests)
+if(NOT skip_unittests)
+    add_subdirectory(tests)
+endif()
 
 
 if(install_modules)
diff --git a/samples/azure_functions_sample/CMakeLists.txt b/samples/azure_functions_sample/CMakeLists.txt
index 5bbf677..627531d 100644
--- a/samples/azure_functions_sample/CMakeLists.txt
+++ b/samples/azure_functions_sample/CMakeLists.txt
@@ -23,7 +23,7 @@ endif()
 set(azure_functions_headers
 )
 
-include_directories(./inc ${IOTHUB_CLIENT_INC_FOLDER})
+include_directories(./inc ${IOTHUB_CLIENT_INCLUDE_DIR})
 include_directories(${GW_INC})
 include_directories(../../modules/common)
 
@@ -35,4 +35,4 @@ target_link_libraries(azure_functions_sample gateway)
 linkSharedUtil(azure_functions_sample)
 install_broker(azure_functions_sample ${CMAKE_CURRENT_BINARY_DIR}/$(Configuration) )
 
-add_sample_to_solution(azure_functions_sample)
\ No newline at end of file
+add_sample_to_solution(azure_functions_sample)
diff --git a/samples/hello_world/CMakeLists.txt b/samples/hello_world/CMakeLists.txt
index e1351e6..5569589 100644
--- a/samples/hello_world/CMakeLists.txt
+++ b/samples/hello_world/CMakeLists.txt
@@ -20,7 +20,7 @@ else()
     set_source_files_properties(./src/hello_world_lin.json PROPERTIES HEADER_FILE_ONLY ON)
 endif()
 
-include_directories(./inc ${IOTHUB_CLIENT_INC_FOLDER})
+include_directories(./inc ${IOTHUB_CLIENT_INCLUDE_DIR})
 include_directories(${GW_INC})
 include_directories(../../modules/common)
 
@@ -32,4 +32,4 @@ target_link_libraries(hello_world_sample gateway nanomsg)
 linkSharedUtil(hello_world_sample)
 install_broker(hello_world_sample ${CMAKE_CURRENT_BINARY_DIR}/$(Configuration) )
 
-add_sample_to_solution(hello_world_sample)
\ No newline at end of file
+add_sample_to_solution(hello_world_sample)
diff --git a/samples/java_sample/CMakeLists.txt b/samples/java_sample/CMakeLists.txt
index a8fee08..9b10ce6 100644
--- a/samples/java_sample/CMakeLists.txt
+++ b/samples/java_sample/CMakeLists.txt
@@ -23,7 +23,7 @@ endif()
 set(java_sample_headers
 )
 
-include_directories(./inc ${IOTHUB_CLIENT_INC_FOLDER})
+include_directories(./inc ${IOTHUB_CLIENT_INCLUDE_DIR})
 include_directories(${GW_INC})
 include_directories(../../modules/common)
 
@@ -35,4 +35,4 @@ linkSharedUtil(java_sample)
 install_broker(java_sample ${CMAKE_CURRENT_BINARY_DIR}/$(Configuration) )
 
 
-add_sample_to_solution(java_sample)
\ No newline at end of file
+add_sample_to_solution(java_sample)
diff --git a/samples/simulated_device_cloud_upload/CMakeLists.txt b/samples/simulated_device_cloud_upload/CMakeLists.txt
index d111574..ae7f36c 100644
--- a/samples/simulated_device_cloud_upload/CMakeLists.txt
+++ b/samples/simulated_device_cloud_upload/CMakeLists.txt
@@ -27,7 +27,7 @@ else()
     set(modules_service_c_file ./src/module_service_config_disabled.c)
 endif()
 
-include_directories(./inc ${IOTHUB_CLIENT_INC_FOLDER})
+include_directories(./inc ${IOTHUB_CLIENT_INCLUDE_DIR})
 include_directories(${GW_INC})
 include_directories(../../modules/common)
 
@@ -44,4 +44,4 @@ add_sample_to_solution(simulated_device_cloud_upload_sample)
 
 if(install_executables)
     install(TARGETS simulated_device_cloud_upload_sample DESTINATION bin)
-endif()
\ No newline at end of file
+endif()
-- 
1.9.1

