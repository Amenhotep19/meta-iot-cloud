From fdafe38e11520f8d3ead58996e30ac504273ac1e Mon Sep 17 00:00:00 2001
From: Scott Ware <scott.r.ware@intel.com>
Date: Wed, 8 Mar 2017 13:24:22 +0000
Subject: [PATCH 2/2] Fix nanomsg detection

---
 core/CMakeLists.txt                | 15 ++------
 dependencies.cmake                 | 73 +-------------------------------------
 samples/hello_world/CMakeLists.txt |  4 +--
 3 files changed, 5 insertions(+), 87 deletions(-)

diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt
index e26813c..3ce32d0 100644
--- a/core/CMakeLists.txt
+++ b/core/CMakeLists.txt
@@ -49,15 +49,6 @@ endfunction(linkHttp)
 function(includeHttp)
 endfunction(includeHttp)
 
-#nanomsg lib check macro (temporary)
-macro (nn_check_lib LIB SYM DEF)
-    check_library_exists (${LIB} ${SYM} "" ${DEF})
-    if (${DEF})
-        add_definitions (-D${DEF}=1)
-        set(NN_REQUIRED_LIBRARIES ${NN_REQUIRED_LIBRARIES} ${LIB})
-    endif ()
-endmacro (nn_check_lib)
-
 set(gateway_c_sources
     ./src/message.c
     ./src/internal/event_system.c
@@ -171,14 +162,12 @@ if(WIN32)
     target_link_libraries(gateway parson nanomsg aziotsharedutil ${dynamic_loader_library})
     target_link_libraries(gateway_static parson nanomsg aziotsharedutil ${dynamic_loader_library})
 else()
-    target_link_libraries(gateway parson nanomsg aziotsharedutil ${dynamic_loader_library})
+    target_link_libraries(gateway parson ${NANOMSG_LIB} aziotsharedutil ${dynamic_loader_library})
 
-    target_link_libraries(gateway ${NN_REQUIRED_LIBRARIES})
     target_link_libraries(gateway m)
 
-    target_link_libraries(gateway_static parson nanomsg aziotsharedutil ${dynamic_loader_library})
+    target_link_libraries(gateway_static parson ${NANOMSG_LIB} aziotsharedutil ${dynamic_loader_library})
 
-    target_link_libraries(gateway_static ${NN_REQUIRED_LIBRARIES})
     target_link_libraries(gateway_static m)
 endif()
 
diff --git a/dependencies.cmake b/dependencies.cmake
index 4a67b2e..d1bb36d 100644
--- a/dependencies.cmake
+++ b/dependencies.cmake
@@ -28,78 +28,7 @@ set_platform_files("${CMAKE_CURRENT_LIST_DIR}/deps/c-utility")
 ###############################################################################
 ##########################Find/Install/Build nanomsg###########################
 ###############################################################################
-if(WIN32)
-    findAndInstallNonFindPkg(nanomsg ${PROJECT_SOURCE_DIR}/deps/nanomsg ${PROJECT_SOURCE_DIR}/deps/nanomsg -G "${CMAKE_GENERATOR}")
-    add_library(nanomsg STATIC IMPORTED)
-
-    if(DEFINED ${dependency_install_prefix})
-        set(nanomsg_target_dll "${dependency_install_prefix}/bin/nanomsg.dll" CACHE INTERNAL "The location of the nanomsg.dll (windows)" FORCE)
-        set_target_properties(nanomsg PROPERTIES
-            INTERFACE_INCLUDE_DIRECTORIES "${dependency_install_prefix}/include"
-            IMPORTED_LOCATION "${dependency_install_prefix}/lib/nanomsg.lib"
-        )
-        set(NANOMSG_INCLUDES "${dependency_install_prefix}/include" CACHE INTERNAL "")
-    else()
-        set(nanomsg_target_dll "${CMAKE_INSTALL_PREFIX}/../nanomsg/bin/nanomsg.dll" CACHE INTERNAL "The location of the nanomsg.dll (windows)" FORCE)
-        set_target_properties(nanomsg PROPERTIES
-            INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/../nanomsg/include"
-            IMPORTED_LOCATION "${CMAKE_INSTALL_PREFIX}/../nanomsg/lib/nanomsg.lib"
-        )
-        set(NANOMSG_INCLUDES "${CMAKE_INSTALL_PREFIX}/../nanomsg/include" CACHE INTERNAL "")
-    endif()
-else()
-    include(FindPkgConfig)
-    find_package(PkgConfig REQUIRED)
-
-    #If using a custom install prefix, tell find pkg to use it instead of defaults
-    set(PKG_CONFIG_USE_CMAKE_PREFIX_PATH TRUE)
-
-    pkg_search_module(NANOMSG QUIET nanomsg)
-    if(NOT NANOMSG_FOUND)
-        findAndInstallNonFindPkg(nanomsg ${PROJECT_SOURCE_DIR}/deps/nanomsg ${PROJECT_SOURCE_DIR}/deps/nanomsg -G "${CMAKE_GENERATOR}")
-    endif()
-
-    #If earlier cmake
-    if("${CMAKE_VERSION}" VERSION_GREATER 3.0.2)
-        pkg_search_module(NANOMSG REQUIRED nanomsg)
-        set (NANOMSG_LIB_LOCATION "${NANOMSG_LIBDIR}/lib${NANOMSG_LIBRARIES}.so")
-    else()
-        if(DEFINED ${dependency_install_prefix})
-            set(NANOMSG_INCLUDEDIR "${dependency_install_prefix}/include")
-            set(NANOMSG_LIBRARIES nanomsg)
-            set(NANOMSG_LIBRARY_DIRS "${dependency_install_prefix}/${CMAKE_INSTALL_LIBDIR}")
-            set(NANOMSG_LDFLAGS "-L${NANOMSG_LIBRARY_DIRS};-l${NANOMSG_LIBRARIES}")
-        else()
-            pkg_search_module(NANOMSG REQUIRED nanomsg)
-            set(NANOMSG_LIBRARY_DIRS "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
-        endif()
-        set (NANOMSG_LIB_LOCATION "${NANOMSG_LIBRARY_DIRS}/lib${NANOMSG_LIBRARIES}.so")
-
-    endif()
-
-    if (NOT NANOMSG_LIBDIR STREQUAL "/usr/lib")
-    # There seems to be a problem in CMake if nanomsg is found in the system 
-    # default location when cross compiling. If it's anywhere 
-    # else, we can create a imported target for it.  (Actually, this might 
-    # fail for any cross compile where nanomsg points to a system directory,
-    # so this might need to be refined as we find edge cases)
-        add_library(nanomsg SHARED IMPORTED)
-
-        set_target_properties(nanomsg PROPERTIES
-            INTERFACE_INCLUDE_DIRECTORIES "${NANOMSG_INCLUDEDIR}"
-            INTERFACE_LINK_LIBRARIES "${NANOMSG_LIBRARIES}"
-            INTERFACE_COMPILE_OPTIONS "${NANOMSG_LDFLAGS}"
-            IMPORTED_LOCATION "${NANOMSG_LIB_LOCATION}"
-        )
-        message(STATUS "NANOMSG LIBRARIES: ${NANOMSG_LIBRARIES}")
-        message(STATUS "NANOMSG LDFLAGS: ${NANOMSG_LDFLAGS}")
-        message(STATUS "NANOMSG CFLAGS: ${NANOMSG_CFLAGS}")
-        message(STATUS "NANOMSG LOCATION: ${NANOMSG_LIB_LOCATION}")
-    endif()
-    set(NANOMSG_INCLUDES "${NANOMSG_INCLUDEDIR}"  CACHE INTERNAL "")
-
-
-endif()
+find_library (NANOMSG_LIB NAMES nanomsg)
 
 ###############################################################################
 #############################Init Parson Submodule#############################
diff --git a/samples/hello_world/CMakeLists.txt b/samples/hello_world/CMakeLists.txt
index 42397bd..fc4fae6 100644
--- a/samples/hello_world/CMakeLists.txt
+++ b/samples/hello_world/CMakeLists.txt
@@ -28,9 +28,9 @@ add_executable(hello_world_sample ${hello_world_sources})
 
 add_dependencies(hello_world_sample hello_world logger)
 
-target_link_libraries(hello_world_sample gateway nanomsg)
+target_link_libraries(hello_world_sample gateway ${NANOMSG_LIB})
 linkSharedUtil(hello_world_sample)
 install_broker(hello_world_sample ${CMAKE_CURRENT_BINARY_DIR}/$(Configuration) )
 copy_gateway_dll(hello_world_sample ${CMAKE_CURRENT_BINARY_DIR}/$(Configuration) )
 
-add_sample_to_solution(hello_world_sample)
\ No newline at end of file
+add_sample_to_solution(hello_world_sample)
-- 
1.9.1

